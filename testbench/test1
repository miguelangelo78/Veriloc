module Mymodule {
	public:
		// The ports of the module: */
		reg input a, b = (1+2 * (1 / (1+2 + (a)))), c, d[8:0;5:0];
		wire output q;
		reg data[7:0] = -8hu1x0zZ020FA; // Test literals */
		char a = -1;

		// Constructor: */
		Mymodule() {
			myvar = ((q == 1) ? 2 : ((b == 1) ? 10 : -1 ));
			q = c && b && c;
		}

		int add(char c) {
			char q1 = q*1;
			q /= c;
			if(q >= 10 && q1<10)
				q = 0 - 10 * 10;
		}

		// Sensitivity list: */
		always(a, b,c, posedge clock) {
			a <= 1;
		}

		always() {
			i = i+1*(1+2);
			add(2,0x10,a+b,a+1);
			a <= ~1;
		}

	private:
		char myvar;
};

testbench Test {
	wire mywire;
	reg myreg = mywire+1;

	Mymodule mod;

	Test() {
		#100;
		a <= ~1;
	}

	// Sensivity list: */
	always(mod.a, mod.b, posedge mod.c) {
		LABELIF:
		if(mod.a == 1)
			LABEL: run();
		elsif(mod.b==2) {
			// Do nothingss
		} else if(mod.c==3)
			run_again();
	}
};

int main(int argc, char ** argv) {
	printf("Example code");
	return 0;
}
