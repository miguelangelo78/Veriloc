module Mymodule {
	public:
		// The ports of the module: */
		reg  input a, b, c, d[7:0];
		wire output q;

		// Constructor: */
		Mymodule() {
			myvar = 0;
			q = a && b && c;
		}

		// Constructor overloading: */
		Mymodule(char operation) {
			switch(operation) {
			case '0':
				q = a && b && c; break;
			case '1':
				q = a || b || c; break;
			default:
				q = 0;
			}
		}

		int add(char c) {
			char q1 = q+1;
			q += c;
			if(q >= 10 && q1<10)
				q = 0;
		}

		// Sensitivity list: */
		always(a, b, c) {
			add(c);
		}

	private:
		char myvar;
};

testbench Test {
	wire mywire;
	reg myreg;

	Mymodule mod;

	Test(int a, int x) {

	}

	// Sensivity list: */
	always(mod.a, mod.b, mod.c) {

	}
};
